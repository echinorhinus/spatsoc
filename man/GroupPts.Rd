% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/group-pts.R
\name{GroupPts}
\alias{GroupPts}
\title{Group Points By Buffer}
\usage{
GroupPts(DT, bufferWidth, timeField = NULL, timeThreshold = NULL,
  projection, coordFields = c("EASTING", "NORTHING"), idField = "ID",
  spPts = NULL)
}
\arguments{
\item{DT}{Input data with coordinate and id fields. If not provided, fields
default to c('EASTING', 'NORTHING') and 'ID'}

\item{bufferWidth}{The width of the buffer around the geometry in the units of the projection}

\item{timeField}{(optional) time field in the DT upon which the spatial grouping will be
calculated}

\item{timeThreshold}{The threshold for considering time groups, eg: '5 minutes' or
'1 hour'. If not provided, times will be matched exactly.}

\item{projection}{Character string for input to sp::CRS() and proj4string()}

\item{coordFields}{Character vector indicating the X coordinate and Y
coordinate columns. eg: c('EASTING', 'NORTHING')}

\item{idField}{Character string indicating the column name for the ID
associated with each point}

\item{spPts}{Alternatively, provide a SpatialPointsDataFrame created with the
sp package. If a spPts object is provided, groups cannot be calculated by}
}
\value{
Group by ID (by time) data.table
}
\description{
Group points by buffer overlap at equal time.
}
\details{
This function uses input spatial points to determine groups in space and
time.
}
\examples{
data(locs)
groups <- GroupPts(locs, '+init=epsg:4326', 50)

groups <- GroupPts(locs, 50, timeField = 'FIX_DATE',
        projection = '+proj=utm +zone=21 ellps=WGS84',
        idField = 'ID')

data(locsPts)

groups <- GroupPts(spPts = locsPts)
}

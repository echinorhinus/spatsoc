% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_lines.R
\name{build_lines}
\alias{build_lines}
\title{Build Lines}
\usage{
build_lines(DT = NULL, projection = NULL, id = NULL, coords = NULL,
  splitBy = NULL)
}
\arguments{
\item{DT}{input data.table}

\item{projection}{PROJ.4 character string}

\item{id}{Character string of ID column name}

\item{coords}{Character vector of X coordinate and Y coordinate column names}

\item{splitBy}{(optional) character string or vector of grouping column name(s) upon which the grouping will be calculated}
}
\value{
\code{build_lines} returns a \code{SpatialLines} object with a line for each individual (and optionally \code{splitBy} combination).

An error is returned when an individual has less than 2 relocations, making it impossible to build a line.
}
\description{
\code{build_lines} creates a \code{SpatialLines} object from a \code{data.table}. The function accepts a \code{data.table} with relocation data, individual identifiers and a \code{projection}. The relocation data is transformed into \code{SpatialLines} for each individual and optionally, each \code{splitBy}. Relocation data should be in two columns representing the latitude and longitude.
}
\details{
The \code{id}, \code{coords} (and optional \code{splitBy}) arguments expect the names of respective columns in \code{DT} which correspond to the individual identifier, latitude and longitude, and additional splitting columns.

The \code{projection} expects a \code{PROJ.4} character string (such as those available on \url{spatialreference.org}).

The \code{splitBy} argument offers further control building \code{SpatialLines}. If in your \code{DT}, you have multiple temporal groups (e.g.: years) for example, you can provide the name of the column which identifies them and build \code{SpatialLines} for each individual in each year.

\code{build_lines} is used by \code{group_lines} for grouping overlapping lines created from relocations.
}
\examples{
# Load data.table
library(data.table)

# Read example data
DT <- fread(system.file("extdata", "DT.csv", package = "spatsoc"))

# Cast the character column to POSIXct
DT[, datetime := as.POSIXct(datetime, tz = 'UTC')]

# Proj4 string for example data
utm <- '+proj=utm +zone=36 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs'

# Build lines for each individual
build_lines(DT, projection = utm, id = 'ID', coords = c('X', 'Y'))

# Build lines for each individual by year
DT[, yr := year(datetime)]
build_lines(DT, projection = utm, id = 'ID', coords = c('X', 'Y'), splitBy = 'yr')

}
\seealso{
\code{\link{group_lines}}

Other Build functions: \code{\link{build_polys}}
}
\concept{Build functions}
